#!/bin/bash

# fail fast
set -o errexit
set -o nounset
set -o pipefail

indent() {
  sed -u 's/^/       /'
}

scriptname=$(basename $0)
case $# in
  2) :;;
  *) echo "$scriptname: usage: $scriptname BUILD_DIR CACHE_DIR" >&2; exit 2;;
esac

build_dir="$1"
cache_dir="$2"
ccache_max_size=50G
num_cpu=$(grep -c ^bogomips /proc/cpuinfo)
rpmbuild=$build_dir/.rpmbuild
rpmspec=$build_dir/.heroku/vendor/bin/rpmspec
source_type=internal
fedora_pkg_url=http://pkgs.fedoraproject.org/repo/pkgs

export CCACHE_DIR=$cache_dir/ccache
export PATH=/usr/local/lib/ccache:"$PATH"

echo "-----> Zeroing ccache stats"
ccache -M $ccache_max_size 2>&1 | indent
ccache -z 2>&1 | indent

echo "-----> Creating RPM build tree"
mkdir -p $rpmbuild/{BUILD,BUILDROOT,RPMS,SRPMS}
mkdir -p $cache_dir/rpmbuild/SOURCES

spec_dir=$build_dir/.root
if [ -d $build_dir/SOURCES ]
then
  source_dir=$build_dir/SOURCES
else
  source_dir=$build_dir/.root
fi

echo "-----> Creating .rpmmacros (for rpmspec)"
if [ -f /etc/redhat-release ]
then
  case $(awk '{print $3}' < /etc/redhat-release) in
    5.*)
      #cp $(dirname $0)/../vendor/redhat-rpm-config-8.0.45/usr/lib/rpm/redhat/macros ~/.rpmmacros
      cat <<EOT >$HOME/.rpmmacros
%centos_version 505
%dist .el5
%el5 1
%rhel 5
EOT
      ;;
    6.*)
      #cp $(dirname $0)/../vendor/redhat-rpm-config-9.0.3/usr/lib/rpm/redhat/macros ~/.rpmmacros
      cat <<EOT >$HOME/.rpmmacros
%centos_version 600
%dist .el6
%el6 1
%rhel 6
EOT
      ;;
    7.*)
      #cp $(dirname $0)/../vendor/redhat-rpm-config-9.1.0/usr/lib/rpm/redhat/macros ~/.rpmmacros
      cat <<EOT >$HOME/.rpmmacros
%centos_ver 7
%dist .el7
%el7 1
%rhel 7
EOT
      ;;
    19)
      #cp $(dirname $0)/../vendor/redhat-rpm-config-9.1.0/usr/lib/rpm/redhat/macros ~/.rpmmacros
      cat <<EOT >$HOME/.rpmmacros
%dist .fc19
%fc19 1
%fedora 19
EOT
      ;;
    20)
      #cp $(dirname $0)/../vendor/redhat-rpm-config-9.1.0/usr/lib/rpm/redhat/macros ~/.rpmmacros
      cat <<EOT >$HOME/.rpmmacros
%dist .fc20
%fc20 1
%fedora 20
EOT
      ;;
    21)
      #cp $(dirname $0)/../vendor/redhat-rpm-config-9.1.0/usr/lib/rpm/redhat/macros ~/.rpmmacros
      cat <<EOT >$HOME/.rpmmacros
%dist .fc21
%fc21 1
%fedora 21
EOT
      ;;
  esac
fi

if ls $spec_dir/*.spec >/dev/null 2>&1
then
  spec_file=$(ls $spec_dir/*.spec)
  echo "       Found RPM spec file: $(basename $spec_file)"
elif ls $spec_dir/*.spec.tmp >/dev/null 2>&1
then
  spec_file=$(ls $spec_dir/*.spec.tmp)
  echo "       Found temporary RPM spec file: $(basename $spec_file)"
else
  echo "       error: Cannot find RPM spec file"
  exit 1
fi

have_bundled_sources=
if [ -f $build_dir/configure.ac -o -f $build_dir/configure.in ]
then
  cd $build_dir >/dev/null 2>&1
  source_url=$($rpmspec -P $spec_file | awk '$1 == "Source:" || $1 == "Source0:" {print $2}')
  case "$source_url" in
    '')
      echo "       error: Cannot find 'Source' or 'Source0' field"
      exit 1
      ;;
  esac
  source_file=$(basename $source_url)
  case "$source_file" in
    *.tar.bz2)
      echo "-----> Creating source archive (using autotools): $source_file"
      ./autogen.sh 2>&1 | indent
      ./configure 2>&1 | indent
      make dist-bzip2 2>&1 | indent
      ;;
    *.tar.gz)
      echo "-----> Creating source archive (using autotools): $source_file"
      ./autogen.sh 2>&1 | indent
      ./configure 2>&1 | indent
      make dist 2>&1 | indent
      ;;
    *.tar.xz)
      echo "-----> Creating source archive (using autotools): $source_file"
      ./autogen.sh 2>&1 | indent
      ./configure 2>&1 | indent
      make dist-xz 2>&1 | indent
      ;;
    *)
      echo "       error: Don't know how to create source archive (using autotools): $source_file"
      exit 1
      ;;
  esac
  have_bundled_sources=1
  cd - >/dev/null 2>&1
elif [ -f $build_dir/setup.py ]
then
  cd $build_dir >/dev/null 2>&1
  source_url=$($rpmspec -P $spec_file | awk '$1 == "Source:" || $1 == "Source0:" {print $2}')
  case "$source_url" in
    '')
      echo "       error: Cannot find 'Source' or 'Source0' field in spec file: $spec_file"
      exit 1
      ;;
  esac
  source_file=$(basename $source_url)
  if [ -f /usr/bin/python26 ]
  then
    python=python26
  else
    python=python
  fi
  case "$source_file" in
    *.tar.bz2)
      echo "-----> Creating source archive (using setup.py): $source_file"
      $python setup.py sdist --formats=bztar 2>&1 | indent
      mv dist/*.tar.bz2 $source_dir
      ;;
    *.tar.gz)
      echo "-----> Creating source archive (using setup.py): $source_file"
      $python setup.py sdist --formats=gztar 2>&1 | indent
      mv dist/*.tar.gz $source_dir
      ;;
    *)
      echo "       error: Don't know how to create source archive (using setup.py): $source_file"
      exit 1
      ;;
  esac
  have_bundled_sources=1
  cd - >/dev/null 2>&1
elif [ -f $build_dir/ext/Makefile.tarball ]
then
  cd $build_dir >/dev/null 2>&1
  source_url=$($rpmspec -P $spec_file | awk '$1 == "Source:" || $1 == "Source0:" {print $2}')
  case "$source_url" in
    '')
      echo "       error: Cannot find 'Source' or 'Source0' field"
      exit 1
      ;;
  esac
  source_file=$(basename $source_url)
  case "$source_file" in
    *.tar.bz2|*.tar.gz)
      echo "-----> Creating source archive (using 'make tarball'): $source_file"
      make tarball
      ;;
    *)
      echo "       error: Don't know how to create source archive (using 'make tarball'): $source_file"
      exit 1
      ;;
  esac
  have_bundled_sources=1
  cd - >/dev/null 2>&1   
fi

if ls $spec_dir/*.spec >/dev/null 2>&1
then
  spec_file=$(ls $spec_dir/*.spec)
else
  echo "       error: Cannot find RPM spec file"
  exit 1
fi

spec_package=$(basename $spec_file .spec)
spec_version=$($rpmspec -P $spec_file | awk '$1 == "Version:" {print $2}')

if [ -z "$have_bundled_sources" ]
then
  echo "-----> Downloading sources and patches"
  source_list=
  for url in $($rpmspec -qP $spec_file | awk '$1 ~ /^(Source|Patch).*:/ {print $2}')
  do
    # Don't use ftp
    url=$(echo $url | sed 's#^ftp://ftp.kernel.org/pub#https://www.kernel.org/pub#')
    filename=$(basename $url)
    case "$url" in
      http://*|https://*)
        if [ -f $cache_dir/rpmbuild/SOURCES/$filename ]
        then
          echo "       Copying downloaded source from cache: $filename"
          cp -f $cache_dir/rpmbuild/SOURCES/$filename $source_dir/$filename
        else
          echo "       Downloading source: $url"
          curl -fsSL $url >$source_dir/$filename 2>&1 | indent
          cp -f $source_dir/$filename $cache_dir/rpmbuild/SOURCES/$filename.new
          mv $cache_dir/rpmbuild/SOURCES/$filename.new $cache_dir/rpmbuild/SOURCES/$filename
        fi
        ;;
      *)
        if [ -f $source_dir/$filename ]
        then
          echo "       Found source: $filename"
        elif [ -f $source_dir/sources -a ! -f $source_dir/$filename ]
        then
          md5=$(awk '$2 == "'"$filename"'" {print $1}' $source_dir/sources)
          url="$fedora_pkg_url/$spec_package/$filename/$md5/$filename"
          if [ -f $cache_dir/rpmbuild/SOURCES/$filename ]
          then
            echo "       Copying downloaded source from cache: $filename"
            cp -f $cache_dir/rpmbuild/SOURCES/$filename $source_dir/$filename
          else
            echo "       Downloading source: $url"
            curl -fsSL $url >$source_dir/$filename 2>&1 | indent
            cp -f $source_dir/$filename $cache_dir/rpmbuild/SOURCES/$filename.new
            mv $cache_dir/rpmbuild/SOURCES/$filename.new $cache_dir/rpmbuild/SOURCES/$filename
          fi
        else
          case "$filename" in
            $spec_package.tar.bz2)
              echo "-----> Did not find source, creating ad-hoc archive: $filename"
              tar -C $build_dir -cjf /tmp/$filename .
              mv /tmp/$filename $source_dir/$filename
              have_bundled_sources=1
              ;;
            $spec_package.tar.gz)
              echo "-----> Did not find source, creating ad-hoc archive: $filename"
              tar -C $build_dir -czf /tmp/$filename .
              mv /tmp/$filename $source_dir/$filename
              have_bundled_sources=1
              ;;
            $spec_package-$spec_version.tar.bz2)
              echo "-----> Did not find source, creating ad-hoc archive: $filename"
              mkdir -p /tmp/app/$spec_package-$spec_version
              tar -C $build_dir -cf - . | tar -C /tmp/app/$spec_package-$spec_version -xf -
              tar -C /tmp/app -cjf /tmp/$filename .
              mv /tmp/$filename $source_dir/$filename
              rm -rf /tmp/app
              have_bundled_sources=1
              ;;
            $spec_package-$spec_version.tar.gz)
              echo "-----> Did not find source, creating ad-hoc archive: $filename"
              mkdir -p /tmp/app/$spec_package-$spec_version
              tar -C $build_dir -cf - . | tar -C /tmp/app/$spec_package-$spec_version -xf -
              tar -C /tmp/app -czf /tmp/$filename .
              mv /tmp/$filename $source_dir/$filename
              rm -rf /tmp/app
              have_bundled_sources=1
              ;;
            *)
              echo "       error: Cannot find source: $filename"
              exit 1
              ;;
          esac
        fi
        ;;
    esac    
  done
fi

if [ -f $source_dir/sources ]
then
  echo "-----> Verifying MD5 checksums for sources"
  cd "$source_dir" >/dev/null 2>&1
  md5sum -c sources 2>&1 | indent
  cd - >/dev/null 2>&1
fi

if [ -n "$have_bundled_sources" ]
then
  echo "-----> Inline sources detected, updating version using git metadata"
  cd $build_dir >/dev/null 2>&1
  spec_version=$($rpmspec -q --queryformat='%{version}\n' $spec_file | sort -u)
  tag=$(git tag | egrep '^(\w*[^0-9])?'"$spec_version"'(-[0-9]*)?$' || : | head -n 1)
  case "$tag" in
    '') tagged_commit=;;
    *) tagged_commit=$(git rev-list -n 1 "$tag");;
  esac
  commit=$(git log -n 1 | awk '$1 == "commit" {print $2}')
  case "$tagged_commit" in
    "$commit")
      echo "       Found version: $spec_version (release)"
      if grep -q '^Release:.*%{?dist}$' $spec_file
      then
        echo "       Not modifying spec file"
      else
        echo "       Adding %{?dist} tag to spec file"
        sed -i "s/^\(Release:.*\)$/\1%{?dist}/" $spec_file
      fi
      ;;
    '')
      echo "       Found version: $spec_version (pre-release)"
      # Example: 3.0.1-0.20140507075019.git.cf89c98
      timestamp=$(date +%Y%m%d%H%M%S)
      rel=0.$timestamp.git.$(echo $commit | sed 's/^\(.\{7\}\).*/\1/')
      echo "       Updating spec file with Release: $rel"
      sed -i "s/^Release:.*$/Release: $rel%{?dist}/" $spec_file
      ;;
    *)
      echo "       Found version: $spec_version (post-release)"
      # Example: 3.0.1-1.20140507075019.git.cf89c98
      timestamp=$(date +%Y%m%d%H%M%S)
      rel=1.$timestamp.git.$(echo $commit | sed 's/^\(.\{7\}\).*/\1/')
      echo "       Updating spec file with Release: $rel"
      sed -i "s/^Release:.*$/Release: $rel%{?dist}/" $spec_file
      ;;
  esac
  cd - >/dev/null 2>&1
fi

#echo "-----> Creating .rpmmacros (for rpmbuild)"
#if [ -f /etc/redhat-release ]
#then
#  case $(awk '{print $3}' < /etc/redhat-release) in
#    5.*)
#      cat <<EOT >$HOME/.rpmmacros
#%centos_version 505
#%dist .el5
#%rhel 5
#EOT
#      ;;
#    6.*)
#      cat <<EOT >$HOME/.rpmmacros
#%centos_version 600
#EOT
#      ;;
#  esac
#fi
cat <<EOT >>$HOME/.rpmmacros
%_topdir $rpmbuild
%_sourcedir $source_dir
EOT

echo "-----> Building RPM package"
cd $build_dir >/dev/null 2>&1
rpmbuild -bb $spec_file 2>&1 | indent
cd - >/dev/null 2>&1
